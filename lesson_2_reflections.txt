What happens when you initialize a repository? Why do you need to do it?

    git init
    you create an empty repository, with no commits

How is the staging area different from the working directory and the repository? What value do you think it offers?

    It's a temporary place, where you can put your files before creating a commit. It's an intermediate state, in which changes can still be made. 
    Also, only the files selected will be part of the stage area and the commit

How can you use the staging area to make sure you have one commit per logical change?

    Just add the file with the change to the staging area, and commit one logical change at the time. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

    When some new features will be introduced, that are not just the script development/improvement. So you can go back to the original one, switch between different branches. 

How do the diagrams help you visualize the branch structure?

    They help visualising all the commits, see where they originate from, analyse reacheability and identify any unreacheable commit. 

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

    You merge together the changes on both branches, they will have elements from both of them. And they have two parents commits. 

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

    Pros: quicker, no errors
    Cons: might change something you do not want to. Doesn't know how to resolve conflicts